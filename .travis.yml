# This is the http://travis-ci.org configuration file for Natron
language: cpp
compiler:
  - gcc
  - clang

# Travis CI has 1.5 cores per VM, take advantage of it
env:
  - CONFIG="coverage debug" MAKEFLAGS="-j 2"

# Natron requires boost >= 1.49 to compile in C++11 mode
# see http://stackoverflow.com/questions/11302758/error-while-copy-constructing-boostshared-ptr-using-c11
# we use the irie/boost ppa for that purpose

# we get libyaml-cpp-dev from kubuntu backports (for OpenColorIO)

before_install:
  - git submodule update --init --recursive
  - sudo add-apt-repository -y ppa:irie/boost
  - if [ "$CC" = "gcc" ]; then sudo pip install cpp-coveralls --use-mirrors; fi
  - if [ "$CC" = "gcc" ]; then sudo add-apt-repository -y ppa:kubuntu-ppa/backports; fi
  - if [ "$CC" = "gcc" ]; then git clone https://github.com/MrKepzie/openfx-io.git; (cd openfx-io; git submodule update -i); fi
  - sudo apt-get update

# Ubuntu 12.04 precise doesn't have a pkg-config file (expat.pc)
install:
  - sudo apt-get install libqt4-dev libglew-dev libboost-serialization-dev libexpat1-dev gdb
# OpenFX
  - if [ "$CC" = "gcc" ]; then make -C libs/OpenFX/Examples BITS=64; fi
  - if [ "$CC" = "gcc" ]; then make -C libs/OpenFX/Support/Plugins BITS=64; fi
  - if [ "$CC" = "gcc" ]; then make -C libs/OpenFX/Support/PropTester BITS=64; fi
  - if [ "$CC" = "gcc" ]; then rm -rf Tests/Plugins; mkdir -p Tests/Plugins/Examples Tests/Plugins/Support Tests/Plugins/IO; fi
  - if [ "$CC" = "gcc" ]; then mv libs/OpenFX/Examples/*/*-64-debug/*.ofx.bundle Tests/Plugins/Examples; fi
  - if [ "$CC" = "gcc" ]; then mv libs/OpenFX/Support/Plugins/*/*-64-debug/*.ofx.bundle libs/OpenFX/Support/PropTester/*-64-debug/*.ofx.bundle Tests/Plugins/Support;  fi
# OpenFX-IO
  - if [ "$CC" = "gcc" ]; then sudo apt-get install cmake libtinyxml-dev liblcms2-dev libyaml-cpp-dev libboost-dev; git clone -b "v1.0.8" https://github.com/imageworks/OpenColorIO.git ocio; cd ocio; mkdir _build; cd _build; cmake .. -DCMAKE_INSTALL_PREFIX=/opt/ocio -DCMAKE_BUILD_TYPE=Release -DOCIO_BUILD_JNIGLUE=OFF -DOCIO_BUILD_NUKE=OFF -DOCIO_BUILD_SHARED=ON -DOCIO_BUILD_STATIC=OFF -DOCIO_STATIC_JNIGLUE=OFF -DOCIO_BUILD_TRUELIGHT=OFF -DUSE_EXTERNAL_LCMS=ON -DUSE_EXTERNAL_TINYXML=ON -DUSE_EXTERNAL_YAML=ON -DOCIO_BUILD_APPS=OFF -DOCIO_USE_BOOST_PTR=ON -DOCIO_BUILD_TESTS=OFF -DOCIO_BUILD_PYGLUE=OFF; make $MAKEFLAGS && sudo make install; cd ../..; fi
  - if [ "$CC" = "gcc" ]; then sudo apt-get install libopenexr-dev libilmbase-dev; fi
  - if [ "$CC" = "gcc" ]; then sudo apt-get install libopenjpeg-dev libtiff-dev libjpeg-dev libpng-dev libboost-filesystem-dev libboost-regex-dev libboost-thread-dev libboost-system-dev libwebp-dev libfreetype6-dev libssl-dev; git clone -b "RB-1.2" git://github.com/OpenImageIO/oiio.git oiio; cd oiio; make $MAKEFLAGS USE_QT=0 USE_TBB=0 USE_PYTHON=0 USE_FIELD3D=0 USE_OPENJPEG=1 USE_OCIO=1 OIIO_BUILD_TESTS=0 OIIO_BUILD_TOOLS=0 OCIO_HOME=/opt/ocio INSTALLDIR=/opt/oiio dist_dir=. cmake; sudo make $MAKEFLAGS dist_dir=.; cd ..; fi
  - if [ "$CC" = "gcc" ]; then sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libavutil-dev; fi
  - if [ "$CC" = "gcc" ]; then env PKG_CONFIG_PATH=/opt/ocio/lib/pkgconfig make -C openfx-io BITS=64 OIIO_HOME=/opt/oiio; fi
  - if [ "$CC" = "gcc" ]; then mv openfx-io/*/*-64-debug/*.ofx.bundle Tests/Plugins/IO;  fi
# config.pri
  - 'echo ''boost: LIBS += -lboost_serialization'' > config.pri'
  - 'echo ''expat: LIBS += -lexpat'' >> config.pri'
  - 'echo ''expat: PKGCONFIG -= expat'' >> config.pri'

script:
  - if [ "$CC" = "gcc" ]; then qmake CONFIG+="coverage debug"; else qmake -spec unsupported/linux-clang; fi
  - make $MAKEFLAGS
  - cd Tests; env OFX_PLUGIN_PATH=Plugins ./Tests; cd ..

after_success:
  - if [ "$CC" = "gcc" ]; then cd Tests; gcov *.gcno > /dev/null; cd ..; coveralls -n --exclude 'Tests/google-test' --exclude 'Tests/google-mock' --exclude 'libs/OpenFX' --exclude-pattern '.*/moc_.*\.cpp' --exclude-pattern='.*/Tests/.*\.cpp' --exclude-pattern='.*/Tests/.*\.h'; fi

<?xml version="1.0"?>
<!--  Natron
 
 This Source Code Form is subject to the terms of the Mozilla Public
 License, v. 2.0. If a copy of the MPL was not distributed with this
 file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 Created by Alexandre GAUTHIER-FOICHAT on 6/1/2012.
 contact: immarespond at gmail dot com
 -->
<typesystem package="NatronGui">

    <!--Load QtGui typesystem-->
    <load-typesystem name="typesystem_gui.xml" generate="no" />
    <!--Load Engine typesystem-->
    <load-typesystem name="typesystem_engine.xml" generate="no" />



    <object-type name="GuiApp">
        <modify-function signature="getTabWidget(std::string)const">
            <modify-argument index="return">
                <define-ownership class="target" owner="target"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="createModalDialog()">
            <modify-argument index="return">
                <define-ownership owner="c++"/>
            </modify-argument>
        </modify-function>
    </object-type>

    <object-type name="PyGuiApplication">
        <modify-function signature="getGuiInstance(int)const">
            <modify-argument index="return">
                <define-ownership class="target" owner="target"/>
            </modify-argument>
        </modify-function>

    </object-type>

	<object-type name="PyModalDialog">
        <modify-function signature="getParam(std::string)const">
            <modify-argument index="return">
                <define-ownership class="target" owner="target"/>
            </modify-argument>
        </modify-function>
	</object-type>
    
    <object-type name="PyPanel">
        <modify-function signature="PyPanel(std::string,bool,GuiApp*)">
            <modify-argument index="this">
                <define-ownership owner="c++"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="getParam(std::string)const">
            <modify-argument index="return">
                <define-ownership class="target" owner="target"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="getParams()const">
            <inject-code class="target" position="beginning">
                std::list&lt;Param*&gt; params = %CPPSELF.%FUNCTION_NAME(%ARGUMENT_NAMES);
                PyObject* ret = PyList_New((int) params.size());
                int idx = 0;
                for (std::list&lt;Param*&gt;::iterator it = params.begin(); it!=params.end(); ++it,++idx) {
                PyObject* item = %CONVERTTOPYTHON[Param*](*it);
                // Ownership transferences.
                Shiboken::Object::getOwnership(item);
                PyList_SET_ITEM(ret, idx, item);
                }
                return ret;
            </inject-code>
        </modify-function>
        <modify-function signature="save_serialization_thread()const" remove="all"/>
    </object-type>
    
    <object-type name="PyTabWidget">
        <modify-function signature="splitHorizontally()">
            <modify-argument index="return">
                <define-ownership class="target" owner="target"/>
            </modify-argument>
        </modify-function>
        <modify-function signature="splitVertically()">
            <modify-argument index="return">
                <define-ownership class="target" owner="target"/>
            </modify-argument>
        </modify-function>
    </object-type>
</typesystem>
